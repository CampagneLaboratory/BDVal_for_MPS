package org.campagnelab.bdval.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.io.FileReader;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import edu.mssm.crover.tables.readers.GeoDataSetReader;
import edu.mssm.crover.tables.Table;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class Input_Behavior {
  public static void init(SNode thisNode) {
  }

  public static void call_load_7052920786130144602(SNode thisNode) {
    try {
      FileReader reader = new FileReader(SPropertyOperations.getString(thisNode, "input"));
      GeoDataSetReader datasetReader = new GeoDataSetReader();
      Table inputTable = datasetReader.read(reader);
      int cols = inputTable.getColumnNumber();
      Input_Behavior.call_getInputIds_7052920786130389579(thisNode, inputTable, 1, cols);
      Input_Behavior.call_getInputDisplay_7052920786130812810(thisNode, inputTable);
    } catch (Exception e) {
      e.printStackTrace();
    }
  }

  public static void call_getInputIds_7052920786130389579(SNode thisNode, Table inputTable, int counter, int cols) {
    if (counter > cols) {
      return;
    }
    String nextId = inputTable.getIdentifier(counter);
    SNode newId = SConceptOperations.createNewNode("org.campagnelab.bdval.structure.InputIds", null);
    SPropertyOperations.set(newId, "id", nextId);
    Input_Behavior.call_getInputIds_7052920786130389579(thisNode, inputTable, counter++, cols);
  }

  public static void call_getInputDisplay_7052920786130812810(SNode thisNode, Table inputTable) {
    int rowCounter = 0;
    while (rowCounter < 10) {
      SNode newRow = SConceptOperations.createNewNode("org.campagnelab.bdval.structure.InputDisplayRow", null);
      Table.RowIterator rowIterator = inputTable.firstRow();
      int colCounter = 0;
      while (colCounter < 10) {
        try {
          SNode newVal = SConceptOperations.createNewNode("org.campagnelab.bdval.structure.InputDisplayVal", null);
          SPropertyOperations.set(newVal, "value", inputTable.getValue(colCounter, rowIterator).toString());
          ListSequence.fromList(SLinkOperations.getTargets(newRow, "cols", true)).addElement(newVal);
        } catch (Exception e) {
          e.printStackTrace();
        }
        colCounter++;
      }
      ListSequence.fromList(SLinkOperations.getTargets(thisNode, "Display", true)).addElement(newRow);
      inputTable.incrementRowNumber();
      rowCounter++;
    }
  }
}
