package org.campagnelab.bdval.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class GeneticAlgorithm_Behavior {
  public static void init(SNode thisNode) {
    SPropertyOperations.set(thisNode, "name", "geneticAlgorithm");

    String addoption1 = "addoption required:population-size:GA population size\n";
    String addoption2 = "addoption required:number-of-steps:GA max number of iterations\n";
    String addoption3 = "addoption required:maximize:the performance measure to maximize\n";
    String addoption4 = "addoption required:folds:Number of cross validation folds\n";
    String addoption5 = "addoption required:cv-repeats:Number of cross validation repeats\n";
    String addoption6 = "addoption required:ratio:The ratio of new number of feature to original number of features (GA)\n";
    SPropertyOperations.set(thisNode, "addoptions", addoption1 + addoption2 + addoption3 + addoption4 + addoption5 + addoption6);

    SPropertyOperations.set(thisNode, "sequenceCommand", " ga-wrapper");

    String sequenceInfo1 = " --optimal-parameters-out %dataset-name%-%split-od%-%label%-optimal-parameters.txt";
    String sequenceInfo2 = " --population-size %population-size%";
    String sequenceInfo3 = " --number-of-steps %number-of-steps%";
    String sequenceInfo4 = " --folds %folds%";
    String sequenceInfo5 = " --cv-repeats %cv-repeats%";
    String sequenceInfo6 = " --maximize %maximize%";
    String sequenceInfo7 = " --ratio %ratio%";
    SPropertyOperations.set(thisNode, "sequenceInfo", sequenceInfo1 + sequenceInfo2 + sequenceInfo3 + sequenceInfo4 + sequenceInfo5 + sequenceInfo6 + sequenceInfo7);

    SPropertyOperations.set(thisNode, "sequenceNumFeatures", " --num-features");

    // Edit otherOptions to add ratio inside Approach behavior (updateVariables) 
    SPropertyOperations.set(thisNode, "otherOptions", "--ratio ${ga-ratio} --number-of-steps ${ga-wrapper-number-of-iterations} ${internal-CV-repeats} --population-size ${ga-wrapper-population-size} --folds ${internal-CV-folds} --maximize ${performance-measure-maximized-by-GA}");
  }
}
