package org.campagnelab.bdval.actions;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.action.NodeSetupContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.Collection;
import org.apache.commons.io.FileUtils;
import java.io.File;
import org.apache.commons.io.filefilter.TrueFileFilter;
import java.util.Iterator;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class QueriesGenerated {
  public static void nodeFactory_NodeSetup_Genelist_8241402136293805130(final IOperationContext operationContext, final NodeSetupContext _context) {
    SNode fsProperties = SLinkOperations.getTarget(SNodeOperations.getAncestor(_context.getEnclosingNode(), "org.campagnelab.bdval.structure.FeatureSelectionChoices", false, false), "parameters", true);
    if (ListSequence.fromList(SLinkOperations.getTargets(fsProperties, "savedGenelist", true)).isEmpty()) {
      String geneListFolder = SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getAncestor(_context.getEnclosingNode(), "org.campagnelab.bdval.structure.Project", false, false), "properties", true), "bdvalDirectory", true), "directoryLocation") + "/data/gene-lists/";
      Collection allFiles = FileUtils.listFiles(new File(geneListFolder), TrueFileFilter.INSTANCE, null);
      File file;
      SNode savedGenelistNode;
      SNode fileNode;
      for (Iterator iterator = allFiles.iterator(); iterator.hasNext();) {
        file = (File) iterator.next();
        savedGenelistNode = SConceptOperations.createNewNode("org.campagnelab.bdval.structure.SavedGenelist", null);
        fileNode = SConceptOperations.createNewNode("org.campagnelab.bdval.structure.File", null);
        SPropertyOperations.set(savedGenelistNode, "name", file.getName());
        SPropertyOperations.set(fileNode, "fileLocation", file.getAbsolutePath());
        SLinkOperations.setTarget(savedGenelistNode, "file", fileNode, true);
        ListSequence.fromList(SLinkOperations.getTargets(fsProperties, "savedGenelist", true)).addElement(savedGenelistNode);
      }
    }
  }
}
