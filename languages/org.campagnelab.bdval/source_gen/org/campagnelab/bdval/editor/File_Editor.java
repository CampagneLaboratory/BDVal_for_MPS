package org.campagnelab.bdval.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.nodeEditor.cells.EditorCell_Component;
import javax.swing.JComponent;
import org.campagnelab.ui.code.Swing.FileSelectorCallback;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.campagnelab.ui.code.Swing.FileSelector;

public class File_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_jqfb9k_a(editorContext, node);
  }

  private EditorCell createCollection_jqfb9k_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_jqfb9k_a");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createProperty_jqfb9k_a0(editorContext, node));
    editorCell.addEditorCell(this.createJComponent_jqfb9k_b0(editorContext, node));
    return editorCell;
  }

  private EditorCell createProperty_jqfb9k_a0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("fileLocation");
    provider.setNoTargetText("enter file path");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_fileLocation");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createJComponent_jqfb9k_b0(EditorContext editorContext, SNode node) {
    EditorCell editorCell = EditorCell_Component.createComponentCell(editorContext, node, File_Editor._QueryFunction_JComponent_jqfb9k_a1a(node, editorContext), "_jqfb9k_b0");
    editorCell.setCellId("JComponent_jqfb9k_b0");
    return editorCell;
  }

  private static JComponent _QueryFunction_JComponent_jqfb9k_a1a(final SNode node, final EditorContext editorContext) {
    FileSelectorCallback callback = new FileSelectorCallback(node, editorContext) {
      public void process(final String path, final SNode node, final EditorContext editorContext) {
        SPropertyOperations.set(SNodeOperations.cast(node, "org.campagnelab.bdval.structure.File"), "fileLocation", path);
      }
    };
    return FileSelector.createSelectionButton("defaultPath", true, true, editorContext, node, callback);
  }
}
