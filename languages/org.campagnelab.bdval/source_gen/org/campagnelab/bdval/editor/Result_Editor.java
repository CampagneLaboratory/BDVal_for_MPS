package org.campagnelab.bdval.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.editor.runtime.style.Padding;
import jetbrains.mps.editor.runtime.style.Measure;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.nodeEditor.cells.EditorCell_Component;
import javax.swing.JComponent;
import org.campagnelab.ui.code.Swing.ButtonCallback;
import org.campagnelab.bdval.behavior.Result_Behavior;
import org.campagnelab.ui.code.Swing.Button;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import org.campagnelab.bdval.charts.mcc.ChartViewer_Charts;

public class Result_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_ouom3r_a(editorContext, node);
  }

  private EditorCell createCollection_ouom3r_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_ouom3r_a");
    editorCell.setBig(true);
    Style style = new StyleImpl();
    style.set(StyleAttributes.READ_ONLY, true);
    editorCell.getStyle().putAll(style);
    editorCell.setCanBeFolded(true);
    editorCell.addEditorCell(this.createConstant_ouom3r_a0(editorContext, node));
    if (renderingCondition_ouom3r_a1a(node, editorContext)) {
      editorCell.addEditorCell(this.createCollection_ouom3r_b0(editorContext, node));
    }
    editorCell.addEditorCell(this.createJComponent_ouom3r_c0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_ouom3r_d0(editorContext, node));
    editorCell.addEditorCell(this.createProperty_ouom3r_e0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_ouom3r_f0(editorContext, node));
    editorCell.addEditorCell(this.createProperty_ouom3r_g0(editorContext, node));
    if (renderingCondition_ouom3r_a7a(node, editorContext)) {
      editorCell.addEditorCell(this.createConstant_ouom3r_h0(editorContext, node));
    }
    if (renderingCondition_ouom3r_a8a(node, editorContext)) {
      editorCell.addEditorCell(this.createCollection_ouom3r_i0(editorContext, node));
    }
    editorCell.addEditorCell(this.createConstant_ouom3r_j0(editorContext, node));
    editorCell.addEditorCell(this.createJComponent_ouom3r_k0(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_ouom3r_a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Result:");
    editorCell.setCellId("Constant_ouom3r_a0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.PADDING_RIGHT, new Padding(5, Measure.SPACES));
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createCollection_ouom3r_b0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_ouom3r_b0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createJComponent_ouom3r_a1a(editorContext, node));
    return editorCell;
  }

  private static boolean renderingCondition_ouom3r_a1a(SNode node, EditorContext editorContext) {
    return SPropertyOperations.getInteger(node, "numberModels") > 0 && SPropertyOperations.getBoolean(node, "noMaqcii");
  }

  private EditorCell createJComponent_ouom3r_a1a(EditorContext editorContext, SNode node) {
    EditorCell editorCell = EditorCell_Component.createComponentCell(editorContext, node, Result_Editor._QueryFunction_JComponent_ouom3r_a0b0(node, editorContext), "_ouom3r_a1a");
    editorCell.setCellId("JComponent_ouom3r_a1a");
    return editorCell;
  }

  private static JComponent _QueryFunction_JComponent_ouom3r_a0b0(final SNode node, final EditorContext editorContext) {
    ButtonCallback callback = new ButtonCallback(node, editorContext) {
      public void process(final SNode n, final EditorContext editorContext) {
        {
          final SNode node = ((SNode) n);
          Result_Behavior.call_evaluateStatistics_3634366430331113687(node);
        }
      }
    };
    return Button.createButton("Evaluate Statistics", editorContext, node, callback);

  }

  private EditorCell createJComponent_ouom3r_c0(EditorContext editorContext, SNode node) {
    EditorCell editorCell = EditorCell_Component.createComponentCell(editorContext, node, Result_Editor._QueryFunction_JComponent_ouom3r_a2a(node, editorContext), "_ouom3r_c0");
    editorCell.setCellId("JComponent_ouom3r_c0");
    return editorCell;
  }

  private static JComponent _QueryFunction_JComponent_ouom3r_a2a(final SNode node, final EditorContext editorContext) {
    ButtonCallback callback = new ButtonCallback(node, editorContext) {
      public void process(final SNode n, final EditorContext editorContext) {
        {
          final SNode node = ((SNode) n);
          Result_Behavior.call_generateFinalModel_6380268605238741230(node);
        }
      }
    };
    return Button.createButton("Final Model", editorContext, node, callback);

  }

  private EditorCell createConstant_ouom3r_d0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Folder Name:");
    editorCell.setCellId("Constant_ouom3r_d0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
    style.set(StyleAttributes.INDENT_LAYOUT_ON_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createProperty_ouom3r_e0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("name");
    provider.setNoTargetText("<no name>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_name");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createConstant_ouom3r_f0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Number of Models:");
    editorCell.setCellId("Constant_ouom3r_f0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createProperty_ouom3r_g0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("numberModels");
    provider.setNoTargetText("<no numberModels>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_numberModels");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createConstant_ouom3r_h0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "No MAQCII File (evaluate statistics to generate)");
    editorCell.setCellId("Constant_ouom3r_h0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private static boolean renderingCondition_ouom3r_a7a(SNode node, EditorContext editorContext) {
    return SPropertyOperations.getBoolean(node, "noMaqcii");
  }

  private EditorCell createCollection_ouom3r_i0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_ouom3r_i0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.READ_ONLY, true);
    style.set(StyleAttributes.SELECTABLE, false);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createConstant_ouom3r_a8a(editorContext, node));
    editorCell.addEditorCell(this.createProperty_ouom3r_b8a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_ouom3r_c8a(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_ouom3r_d8a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_ouom3r_e8a(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_ouom3r_f8a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_ouom3r_g8a(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_ouom3r_h8a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_ouom3r_i8a(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_ouom3r_j8a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_ouom3r_k8a(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_ouom3r_l8a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_ouom3r_m8a(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_ouom3r_n8a(editorContext, node));
    return editorCell;
  }

  private static boolean renderingCondition_ouom3r_a8a(SNode node, EditorContext editorContext) {
    return !(SPropertyOperations.getBoolean(node, "noMaqcii"));
  }

  private EditorCell createConstant_ouom3r_a8a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "MAQCII File Location:");
    editorCell.setCellId("Constant_ouom3r_a8a");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createProperty_ouom3r_b8a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("maqciiFile");
    provider.setNoTargetText("<no maqciiFile>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_maqciiFile");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createConstant_ouom3r_c8a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "MCC:");
    editorCell.setCellId("Constant_ouom3r_c8a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.PADDING_RIGHT, new Padding(8, Measure.SPACES));
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createRefNode_ouom3r_d8a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("MCC");
    provider.setNoTargetText("<no MCC>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setRole("MCC");
    }
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createConstant_ouom3r_e8a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "AUC:");
    editorCell.setCellId("Constant_ouom3r_e8a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.PADDING_RIGHT, new Padding(8, Measure.SPACES));
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createRefNode_ouom3r_f8a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("AUC");
    provider.setNoTargetText("<no AUC>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setRole("AUC");
    }
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createConstant_ouom3r_g8a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "RMSE:");
    editorCell.setCellId("Constant_ouom3r_g8a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.PADDING_RIGHT, new Padding(7, Measure.SPACES));
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createRefNode_ouom3r_h8a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("RMSE");
    provider.setNoTargetText("<no RMSE>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setRole("RMSE");
    }
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createConstant_ouom3r_i8a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Accuracy:");
    editorCell.setCellId("Constant_ouom3r_i8a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.PADDING_RIGHT, new Padding(3, Measure.SPACES));
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createRefNode_ouom3r_j8a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("accuracy");
    provider.setNoTargetText("<no accuracy>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setRole("accuracy");
    }
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createConstant_ouom3r_k8a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Sensitivity:");
    editorCell.setCellId("Constant_ouom3r_k8a");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createRefNode_ouom3r_l8a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("sensitivity");
    provider.setNoTargetText("<no sensitivity>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setRole("sensitivity");
    }
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createConstant_ouom3r_m8a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Specificity:");
    editorCell.setCellId("Constant_ouom3r_m8a");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createRefNode_ouom3r_n8a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("specificity");
    provider.setNoTargetText("<no specificity>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setRole("specificity");
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createConstant_ouom3r_j0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_ouom3r_j0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createJComponent_ouom3r_k0(EditorContext editorContext, SNode node) {
    EditorCell editorCell = EditorCell_Component.createComponentCell(editorContext, node, Result_Editor._QueryFunction_JComponent_ouom3r_a01a(node, editorContext), "_ouom3r_k0");
    editorCell.setCellId("JComponent_ouom3r_k0");
    return editorCell;
  }

  private static JComponent _QueryFunction_JComponent_ouom3r_a01a(final SNode node, final EditorContext editorContext) {
    return ChartViewer_Charts.panel(SPropertyOperations.getString(node, "maqciiFile"), SPropertyOperations.getString(node, "maqciiFile"));
  }
}
