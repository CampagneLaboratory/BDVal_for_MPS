<project name="Example" default="evaluate" basedir=".">
  <!--Set up-->
  <dirname property="bdval-project.basedir" file="${ant.file.Example}"></dirname>
  <import file="/Users/vmb34/Desktop/bdval/buildsupport/build.xml"></import>
  <property file="${bdval-project.basedir}/${ant.project.name}-local.properties"></property>
  <property name="project-property-file" value="${bdval-project.basedir}/${ant.project.name}.properties"></property>
  <property file="${project-property-file}"></property>
  <property name="tag-description" value="Example Run"></property>
  
  <!--Basic Properties-->
  <property name="enable-flooring" value="false"></property>
  <property name="evaluate-statistics-after-splits" value="false"></property>
  <property name="external-CV-repeats-number" value="5"></property>
  <property name="external-CV-repeats" value="--cv-repeats ${external-CV-repeats-number}"></property>
  <property name="external-CV-folds" value="1"></property>
  <property name="num-features" value="20,50,100"></property>
  <property name="max-intermediate-features" value="400"></property>
  
  <!--Feature Selection Properties-->
  <property name="ttest-alpha" value="0.05"></property>
  <property name="svmIterative-r" value="0.5"></property>
  <property name="minMax-observations" value="3"></property>
  <property name="ga-wrapper-population-size" value="20"></property>
  <property name="ga-wrapper-number-of-iterations" value="20"></property>
  <property name="performance-measure-maximized-by-GA" value="MCC"></property>
  <property name="internal-CV-repeats" value="--cv-repeats 3"></property>
  <property name="internal-CV-folds" value="3"></property>
  <property name="ga-ratio" value="0.5"></property>
  <property name="perm-alpha" value="0.05"></property>
  <property name="fold-change-phi" value="1.5"></property>
  <property name="coxreg-alpha" value="0.05"></property>
  
  <property name="pathway-aggregation-method" value="PCA"></property>
  
  <!--Classification Properties-->
  <property name="use-probability" value="false"></property>
  
  <!--Additional Properties-->
  <property name="run-java" value="true"></property>
  <var name="do.Example_DiseasedYesNo_Test" value="true"></var>
  <property name="all-endpoints" value=" Example_DiseasedYesNo_Test"></property>
  <import file="/Users/vmb34/Desktop/bdval/data/bdval.xml"></import>
  
  
  <target name="evaluate" description="Run a complete evaluation." depends="prepare-bdval, rserve-status, tag-output-directory">
    <delete file="${statistics-output}"></delete>
    <echo message="Executing with ${num-threads} threads"></echo>
    <property name="do.my-execute-splits" value="true"></property>
    <execute-all-endpoints></execute-all-endpoints>
    <antcall target="process-model-conditions"></antcall>
    <antcall target="zip-results"></antcall>
  </target>
  
  <macrodef name="call-execute-splits" description="Calls execute split for each model to be generated">
    <attribute name="endpoint-name"></attribute>
    <attribute name="dataset-root"></attribute>
    <attribute name="floor-param"></attribute>
    <attribute name="array-params"></attribute>
    <sequential>
      <execute-splits feature-selection-fold="true" sequence-file="generated-foldchange+svmGlobal-pathway-kStar-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.weka.WekaClassifier --classifier-parameters wekaClass=weka.classifiers.lazy.KStar" other-options=" --phi ${fold-change-phi}  --max-intermediate-features ${max-intermediate-features} --weka-class weka.classifiers.lazy.KStar --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-geneticAlgorithm-kStar-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.weka.WekaClassifier --classifier-parameters wekaClass=weka.classifiers.lazy.KStar" other-options=" --ratio ${ga-ratio} --number-of-steps ${ga-wrapper-number-of-iterations} ${internal-CV-repeats} --population-size ${ga-wrapper-population-size} --folds ${internal-CV-folds} --maximize ${performance-measure-maximized-by-GA} --weka-class weka.classifiers.lazy.KStar --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-minMax-kStar-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.weka.WekaClassifier --classifier-parameters wekaClass=weka.classifiers.lazy.KStar" other-options=" --min-max-observations ${minMax-observations} --weka-class weka.classifiers.lazy.KStar --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-wholeChip-kStar-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.weka.WekaClassifier --classifier-parameters wekaClass=weka.classifiers.lazy.KStar" other-options=" --weka-class weka.classifiers.lazy.KStar --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-foldchange+svmGlobal-pathway-naiveBayes-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.weka.WekaClassifier --classifier-parameters wekaClass=weka.classifiers.bayes.NaiveBayesUpdateable" other-options=" --phi ${fold-change-phi}  --max-intermediate-features ${max-intermediate-features} --weka-class weka.classifiers.bayes.NaiveBayesUpdateable --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-geneticAlgorithm-naiveBayes-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.weka.WekaClassifier --classifier-parameters wekaClass=weka.classifiers.bayes.NaiveBayesUpdateable" other-options=" --ratio ${ga-ratio} --number-of-steps ${ga-wrapper-number-of-iterations} ${internal-CV-repeats} --population-size ${ga-wrapper-population-size} --folds ${internal-CV-folds} --maximize ${performance-measure-maximized-by-GA} --weka-class weka.classifiers.bayes.NaiveBayesUpdateable --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-minMax-naiveBayes-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.weka.WekaClassifier --classifier-parameters wekaClass=weka.classifiers.bayes.NaiveBayesUpdateable" other-options=" --min-max-observations ${minMax-observations} --weka-class weka.classifiers.bayes.NaiveBayesUpdateable --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-wholeChip-naiveBayes-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.weka.WekaClassifier --classifier-parameters wekaClass=weka.classifiers.bayes.NaiveBayesUpdateable" other-options=" --weka-class weka.classifiers.bayes.NaiveBayesUpdateable --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-foldchange+svmGlobal-pathway-SVMTuneC-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=0.5" other-options=" --phi ${fold-change-phi}  --max-intermediate-features ${max-intermediate-features} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-foldchange+svmGlobal-pathway-SVMTuneC-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=1" other-options=" --phi ${fold-change-phi}  --max-intermediate-features ${max-intermediate-features} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-foldchange+svmGlobal-pathway-SVMTuneC-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=10" other-options=" --phi ${fold-change-phi}  --max-intermediate-features ${max-intermediate-features} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-geneticAlgorithm-SVMTuneC-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=0.5" other-options=" --ratio ${ga-ratio} --number-of-steps ${ga-wrapper-number-of-iterations} ${internal-CV-repeats} --population-size ${ga-wrapper-population-size} --folds ${internal-CV-folds} --maximize ${performance-measure-maximized-by-GA} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-geneticAlgorithm-SVMTuneC-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=1" other-options=" --ratio ${ga-ratio} --number-of-steps ${ga-wrapper-number-of-iterations} ${internal-CV-repeats} --population-size ${ga-wrapper-population-size} --folds ${internal-CV-folds} --maximize ${performance-measure-maximized-by-GA} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-geneticAlgorithm-SVMTuneC-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=10" other-options=" --ratio ${ga-ratio} --number-of-steps ${ga-wrapper-number-of-iterations} ${internal-CV-repeats} --population-size ${ga-wrapper-population-size} --folds ${internal-CV-folds} --maximize ${performance-measure-maximized-by-GA} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-minMax-SVMTuneC-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=0.5" other-options=" --min-max-observations ${minMax-observations} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-minMax-SVMTuneC-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=1" other-options=" --min-max-observations ${minMax-observations} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-minMax-SVMTuneC-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=10" other-options=" --min-max-observations ${minMax-observations} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-wholeChip-SVMTuneC-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=0.5" other-options=" --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-wholeChip-SVMTuneC-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=1" other-options=" --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="true" sequence-file="generated-wholeChip-SVMTuneC-fs=true.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=10" other-options=" --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-foldchange+svmGlobal-pathway-kStar-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.weka.WekaClassifier --classifier-parameters wekaClass=weka.classifiers.lazy.KStar" other-options=" --phi ${fold-change-phi}  --max-intermediate-features ${max-intermediate-features} --weka-class weka.classifiers.lazy.KStar --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-geneticAlgorithm-kStar-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.weka.WekaClassifier --classifier-parameters wekaClass=weka.classifiers.lazy.KStar" other-options=" --ratio ${ga-ratio} --number-of-steps ${ga-wrapper-number-of-iterations} ${internal-CV-repeats} --population-size ${ga-wrapper-population-size} --folds ${internal-CV-folds} --maximize ${performance-measure-maximized-by-GA} --weka-class weka.classifiers.lazy.KStar --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-minMax-kStar-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.weka.WekaClassifier --classifier-parameters wekaClass=weka.classifiers.lazy.KStar" other-options=" --min-max-observations ${minMax-observations} --weka-class weka.classifiers.lazy.KStar --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-wholeChip-kStar-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.weka.WekaClassifier --classifier-parameters wekaClass=weka.classifiers.lazy.KStar" other-options=" --weka-class weka.classifiers.lazy.KStar --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-foldchange+svmGlobal-pathway-naiveBayes-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.weka.WekaClassifier --classifier-parameters wekaClass=weka.classifiers.bayes.NaiveBayesUpdateable" other-options=" --phi ${fold-change-phi}  --max-intermediate-features ${max-intermediate-features} --weka-class weka.classifiers.bayes.NaiveBayesUpdateable --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-geneticAlgorithm-naiveBayes-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.weka.WekaClassifier --classifier-parameters wekaClass=weka.classifiers.bayes.NaiveBayesUpdateable" other-options=" --ratio ${ga-ratio} --number-of-steps ${ga-wrapper-number-of-iterations} ${internal-CV-repeats} --population-size ${ga-wrapper-population-size} --folds ${internal-CV-folds} --maximize ${performance-measure-maximized-by-GA} --weka-class weka.classifiers.bayes.NaiveBayesUpdateable --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-minMax-naiveBayes-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.weka.WekaClassifier --classifier-parameters wekaClass=weka.classifiers.bayes.NaiveBayesUpdateable" other-options=" --min-max-observations ${minMax-observations} --weka-class weka.classifiers.bayes.NaiveBayesUpdateable --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-wholeChip-naiveBayes-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.weka.WekaClassifier --classifier-parameters wekaClass=weka.classifiers.bayes.NaiveBayesUpdateable" other-options=" --weka-class weka.classifiers.bayes.NaiveBayesUpdateable --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-foldchange+svmGlobal-pathway-SVMTuneC-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=0.5" other-options=" --phi ${fold-change-phi}  --max-intermediate-features ${max-intermediate-features} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-foldchange+svmGlobal-pathway-SVMTuneC-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=1" other-options=" --phi ${fold-change-phi}  --max-intermediate-features ${max-intermediate-features} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-foldchange+svmGlobal-pathway-SVMTuneC-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=10" other-options=" --phi ${fold-change-phi}  --max-intermediate-features ${max-intermediate-features} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-geneticAlgorithm-SVMTuneC-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=0.5" other-options=" --ratio ${ga-ratio} --number-of-steps ${ga-wrapper-number-of-iterations} ${internal-CV-repeats} --population-size ${ga-wrapper-population-size} --folds ${internal-CV-folds} --maximize ${performance-measure-maximized-by-GA} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-geneticAlgorithm-SVMTuneC-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=1" other-options=" --ratio ${ga-ratio} --number-of-steps ${ga-wrapper-number-of-iterations} ${internal-CV-repeats} --population-size ${ga-wrapper-population-size} --folds ${internal-CV-folds} --maximize ${performance-measure-maximized-by-GA} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-geneticAlgorithm-SVMTuneC-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=10" other-options=" --ratio ${ga-ratio} --number-of-steps ${ga-wrapper-number-of-iterations} ${internal-CV-repeats} --population-size ${ga-wrapper-population-size} --folds ${internal-CV-folds} --maximize ${performance-measure-maximized-by-GA} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-minMax-SVMTuneC-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=0.5" other-options=" --min-max-observations ${minMax-observations} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-minMax-SVMTuneC-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=1" other-options=" --min-max-observations ${minMax-observations} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-minMax-SVMTuneC-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=10" other-options=" --min-max-observations ${minMax-observations} --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-wholeChip-SVMTuneC-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=0.5" other-options=" --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-wholeChip-SVMTuneC-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=1" other-options=" --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
      <execute-splits feature-selection-fold="false" sequence-file="generated-wholeChip-SVMTuneC-fs=false.sequence" endpoint-name="@{endpoint-name}" dataset-root="@{dataset-root}" floor-param="@{floor-param}" array-params="@{array-params}" all-classifier-parameters=" --classifier edu.cornell.med.icb.learning.libsvm.LibSvmClassifier  --classifier-parameters probability=${use-probability},C=10" other-options=" --pathways ${@{endpoint-name}.pathways-file} --gene-to-probes ${@{endpoint-name}.gene-to-probes-file} --pathway-aggregation-method ${pathway-aggregation-method}"></execute-splits>
    </sequential>
  </macrodef>
  
</project>